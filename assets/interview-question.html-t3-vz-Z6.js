import{_ as n,r as l,o,c as i,b as e,d as t,e as r,a as s}from"./app-bF92e_SO.js";const c={},h={href:"https://vue3js.cn/interview/",target:"_blank",rel:"noopener noreferrer"},d=s('<h2 id="_1-js-基础" tabindex="-1"><a class="header-anchor" href="#_1-js-基础" aria-hidden="true">#</a> 1. Js 基础</h2><h3 id="_1-箭头函数和普通函数的重要区别" tabindex="-1"><a class="header-anchor" href="#_1-箭头函数和普通函数的重要区别" aria-hidden="true">#</a> 1. 箭头函数和普通函数的重要区别</h3><p>在普通函数中，this 总是指向调用它的对象，如果用作构造函数，this 指向创建的对象实例。</p><p>箭头函数本身没有 this，但是它在声明时可以捕获其所在上下文的 this 供自己使用。this 一旦被捕获，就不再发生变化。</p><h3 id="_2-和-的作用" tabindex="-1"><a class="header-anchor" href="#_2-和-的作用" aria-hidden="true">#</a> 2. || 和 &amp;&amp; 的作用</h3><ol><li><p>只要 || 前面为 false,不管 || 后面是 true 还是 false，都返回 || 后面的值。</p></li><li><p>只要 || 前面为 true,不管 || 后面是 true 还是 false，都返回 || 前面的值。</p></li><li><p>只要 &amp;&amp; 前面是 false，无论 &amp;&amp; 后面是 true 还是 false，结果都将返 &amp;&amp; 前面的值;</p></li><li><p>只要 &amp;&amp; 前面是 true，无论 &amp;&amp; 后面是 true 还是 false，结果都将返 &amp;&amp; 后面的值;</p></li></ol>',6),p={class:"custom-container tip"},_=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),u=e("p",{class:"custom-container-title"},"TIP",-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Boolean",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"_2-vue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-vue","aria-hidden":"true"},"#"),t(" 2. Vue")],-1),b=e("h3",{id:"_1-父子组件的加载顺序-从生命周期的角度描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-父子组件的加载顺序-从生命周期的角度描述","aria-hidden":"true"},"#"),t(" 1. 父子组件的加载顺序，从生命周期的角度描述")],-1),x={href:"https://blog.csdn.net/leilei__66/article/details/118699960",target:"_blank",rel:"noopener noreferrer"},v=e("ol",null,[e("li",null,"父组件 beforeCreate"),e("li",null,"父组件 created"),e("li",null,"父组件 beforeMount"),e("li",null,"子组件 beforeCreate"),e("li",null,"子组件 created"),e("li",null,"子组件 beforeMount"),e("li",null,"父组件 mounted"),e("li",null,"子组件 mounted")],-1);function k(w,g){const a=l("ExternalLinkIcon");return o(),i("div",null,[e("p",null,[e("a",h,[t("前端题库"),r(a)])]),d,e("div",p,[_,u,e("p",null,[t('如果省略该参数或参数值为 0、-0、null、false、NaN、undefined，或空字符串（""），则该对象具有的初始值为 false。所有其他值，包括任何对象，空数组（[]）或字符串 "false"，都会创建一个初始值为 true 的对象。 --- '),e("a",f,[t("MDN Boolean 包装器"),r(a)])])]),m,b,e("p",null,[t("参考"),e("a",x,[t("原博客"),r(a)]),t("。")]),v])}const B=n(c,[["render",k],["__file","interview-question.html.vue"]]);export{B as default};
